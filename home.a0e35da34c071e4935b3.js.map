{"version":3,"sources":["webpack:///./src/textures/checkerboard.jpg","webpack:///./src/textures/star.png","webpack:///./src/glsl/vertexShader.glsl","webpack:///./src/glsl/fragmentShader.glsl","webpack:///./src/js/application.js","webpack:///./src/js/index.js","webpack:///./src/js/components/navbar.js"],"names":["module","exports","checkerboard","require","star","vertexShader","fragmentShader","Application","opts","this","showHelpers","undefined","canvas","document","getElementById","container","querySelector","createTooltip","textureLoader","THREE","Detector","bindEventHandlers","init","render","warning","appendChild","handleClick","bind","handleMouseMove","handleResize","showTooltip","hideTooltip","window","addEventListener","setupScene","setupRenderer","setupCamera","Interaction","renderer","scene","camera","setupLights","setupHelpers","setupRay","setupControls","addFloor","addCube","addCustomMesh","addParticleSystem","spread","x","y","z","addGroupObject","depth","height","width","controls","update","updateCustomMesh","requestAnimationFrame","main","alert","div","createElement","setAttribute","tooltip","event","getNDCCoordinates","raycaster","setFromCamera","intersects","intersectObjects","children","length","hexColor","Math","random","object","material","color","setHex","ray","direction","origin","arrow","add","clientWidth","clientHeight","aspect","updateProjectionMatrix","setSize","interactionEvent","target","name","type","uuid","data","global","getScreenCoordinates","xScreen","yScreen","innerHTML","style","autoUpdate","getComputedStyle","getPropertyValue","background","fog","antialias","setClearColor","setPixelRatio","devicePixelRatio","shadowMap","enabled","domElement","position","set","lookAt","dirLight","castShadow","shadow","near","spotLight","ambientLight","gridHelper","axesHelper","getObjectByName","dirLightHelper","dirLightCameraHelper","spotLightHelper","spotLightCameraHelper","geometry","load","texture","wrapS","wrapT","repeat","map","side","floor","rotation","PI","cursor","on","OrbitControls","maxDistance","minDistance","autoRotate","gui","DAT","min","max","delta","uniforms","value","vertexDisplacement","Float32Array","attributes","count","i","sin","customMesh","needsUpdate","cube","numParticles","particleSize","particleSpecs","particles","Array","fill","makeParticle","vertices","alphaTest","size","transparent","particleSystem","numBoxes","boxSpecs","group","meshes","makeMesh","mesh","debug","offsetLeft","offsetTop","xRelativePx","clientX","yRelativePx","clientY","screenX","screenY","console","table","xNDC","yNDC","canvasDomRect","getBoundingClientRect","mainDomRect","d","particle","randFloatSpread","toggleMobileNav","classList","toggle"],"mappings":"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","file":"home.a0e35da34c071e4935b3.js","sourcesContent":["module.exports = __webpack_public_path__ + \"textures/checkerboard.bda67ca60caae86413aec7e10112ac3e.jpg\";","module.exports = __webpack_public_path__ + \"textures/star.1295a0feb51cb51561825078eaf1e493.png\";","module.exports = \"attribute float vertexDisplacement;\\nuniform float delta;\\nvarying float vOpacity;\\nvarying vec3 vUv;\\n\\nvoid main() {\\n    vUv = position;\\n    vOpacity = vertexDisplacement;\\n\\n    vec3 p = position;\\n\\n    p.x += sin(vertexDisplacement) * 50.0;\\n    p.y += cos(vertexDisplacement) * 50.0;\\n\\n    vec4 modelViewPosition = modelViewMatrix * vec4(p, 1.0);\\n    gl_Position = projectionMatrix * modelViewPosition;\\n}\\n\"","module.exports = \"uniform float delta;\\nvarying float vOpacity;\\nvarying vec3 vUv;\\n\\nvoid main() {\\n    float r = 1.0 + cos(vUv.x * delta);\\n    float g = 0.5 + sin(delta) * 0.5;\\n    float b = 0.0;\\n    vec3 rgb = vec3(r, g, b);\\n\\n    gl_FragColor = vec4(rgb, vOpacity);\\n}\"","import * as THREE from \"three\";\n// TODO: OrbitControls import three.js on its own, so the webpack bundle includes three.js twice!\nimport OrbitControls from \"orbit-controls-es6\";\nimport { Interaction } from \"three.interaction\";\n\nimport * as Detector from \"../js/vendor/Detector\";\nimport * as DAT from \"../js/vendor/dat.gui.min\";\n\nconst checkerboard = require(\"../textures/checkerboard.jpg\");\nconst star = require(\"../textures/star.png\");\nconst vertexShader = require(\"../glsl/vertexShader.glsl\");\nconst fragmentShader = require(\"../glsl/fragmentShader.glsl\");\n\nconst CAMERA_NAME = \"Perspective Camera\";\nconst DIRECTIONAL_LIGHT_NAME = \"Directional Light\";\nconst SPOT_LIGHT_NAME = \"Spotlight\";\nconst CUSTOM_MESH_NAME = \"Custom Mesh\";\n\nexport class Application {\n  constructor(opts) {\n    this.showHelpers =\n      opts && opts.showHelpers !== undefined ? opts.showHelpers : true;\n    this.canvas = document.getElementById(\"application-canvas\");\n    this.container = document.querySelector(\"main .canvas-container-inner\");\n    this.createTooltip();\n    this.textureLoader = new THREE.TextureLoader();\n\n    if (Detector.webgl) {\n      this.bindEventHandlers();\n      this.init(this.canvas);\n      this.render();\n    } else {\n      // console.warn(\"WebGL NOT supported in your browser!\");\n      const warning = Detector.getWebGLErrorMessage();\n      this.container.appendChild(warning);\n    }\n  }\n\n  /**\n   * Bind event handlers to the Application instance.\n   */\n  bindEventHandlers() {\n    this.handleClick = this.handleClick.bind(this);\n    this.handleMouseMove = this.handleMouseMove.bind(this);\n    this.handleResize = this.handleResize.bind(this);\n    this.showTooltip = this.showTooltip.bind(this);\n    this.hideTooltip = this.hideTooltip.bind(this);\n  }\n\n  init(canvas) {\n    const showGUI = false;\n    window.addEventListener(\"resize\", this.handleResize);\n    this.setupScene();\n    this.setupRenderer(canvas);\n    this.setupCamera();\n    const interaction = new Interaction(this.renderer, this.scene, this.camera);\n    this.setupLights();\n    if (this.showHelpers) {\n      this.setupHelpers();\n    }\n    this.setupRay();\n    this.setupControls();\n\n    if (showGUI) {\n      this.setupGUI();\n    }\n\n    this.addFloor(100, 100);\n    this.addCube(20);\n    this.addCustomMesh();\n\n    const particleSpecs = { spread: { x: 50, y: 100, z: 50 } };\n    this.addParticleSystem(300, 5, particleSpecs);\n\n    const boxSpecs = {\n      depth: 20,\n      height: 10,\n      spread: { x: 20, y: 20, z: 50 },\n      width: 5,\n    };\n    this.addGroupObject(10, boxSpecs);\n  }\n\n  render() {\n    this.controls.update();\n    this.updateCustomMesh();\n    this.renderer.render(this.scene, this.camera);\n    // when render is invoked via requestAnimationFrame(this.render) there is\n    // no 'this', so either we bind it explicitly or use an es6 arrow function.\n    // requestAnimationFrame(this.render.bind(this));\n    requestAnimationFrame(() => this.render());\n  }\n\n  createTooltip() {\n    const main = document.querySelector(\"main\");\n    if (!main) {\n      alert(`You have no '<main>' tag on ythe HTML page. You need exactly ONE`);\n    }\n    const div = document.createElement(\"div\");\n    div.setAttribute(\"class\", \"tooltip\");\n    div.setAttribute(\"data-cy\", \"tooltip\");\n    main.appendChild(div);\n    this.tooltip = div;\n  }\n\n  handleClick(event) {\n    const [x, y] = this.getNDCCoordinates(event, true);\n    this.raycaster.setFromCamera({ x, y }, this.camera);\n    const intersects = this.raycaster.intersectObjects(this.scene.children);\n\n    if (intersects.length > 0) {\n      const hexColor = Math.random() * 0xffffff;\n      const intersection = intersects[0];\n      intersection.object.material.color.setHex(hexColor);\n\n      const { direction, origin } = this.raycaster.ray;\n      const arrow = new THREE.ArrowHelper(direction, origin, 100, hexColor);\n      this.scene.add(arrow);\n    }\n  }\n\n  handleMouseMove(event) {\n    const [x, y] = this.getNDCCoordinates(event);\n  }\n\n  handleResize(event) {\n    // console.warn(event);\n    const { clientWidth, clientHeight } = this.container;\n    this.camera.aspect = clientWidth / clientHeight;\n    this.camera.updateProjectionMatrix();\n    this.renderer.setSize(clientWidth, clientHeight);\n  }\n\n  showTooltip(interactionEvent) {\n    const { name, uuid, type } = interactionEvent.target;\n    const { x, y } = interactionEvent.data.global;\n    const [xScreen, yScreen] = this.getScreenCoordinates(x, y);\n    this.tooltip.innerHTML = `<h4>${name} (${type})</h4><span><em>Click to cast a ray</em></span>`;\n    const style = `left: ${xScreen}px; top: ${yScreen}px; visibility: visible; opacity: 0.8`;\n    this.tooltip.style = style;\n  }\n\n  hideTooltip(interactionEvent) {\n    this.tooltip.style = \"visibility: hidden\";\n  }\n\n  /**\n   * Setup a Three.js scene.\n   * Setting the scene is the first Three.js-specific code to perform.\n   */\n  setupScene() {\n    this.scene = new THREE.Scene();\n    this.scene.autoUpdate = true;\n    // Let's say we want to define the background color only once throughout the\n    // application. This can be done in CSS. So here we use JS to get a property\n    // defined in a CSS.\n    const style = window.getComputedStyle(this.container);\n    const color = new THREE.Color(style.getPropertyValue(\"background-color\"));\n    this.scene.background = color;\n    this.scene.fog = null;\n    // Any Three.js object in the scene (and the scene itself) can have a name.\n    this.scene.name = \"My Three.js Scene\";\n  }\n\n  /**\n   * Create a Three.js renderer.\n   * We let the renderer create a canvas element where to draw its output, then\n   * we set the canvas size, we add the canvas to the DOM and we bind event\n   * listeners to it.\n   */\n  setupRenderer(canvas) {\n    this.renderer = new THREE.WebGLRenderer({\n      antialias: true,\n      canvas,\n    });\n    // this.renderer.setClearColor(0xd3d3d3);  // it's a light gray\n    this.renderer.setClearColor(0x222222); // it's a dark gray\n    this.renderer.setPixelRatio(window.devicePixelRatio || 1);\n    const { clientWidth, clientHeight } = this.container;\n    this.renderer.setSize(clientWidth, clientHeight);\n    this.renderer.shadowMap.enabled = true;\n    this.container.appendChild(this.renderer.domElement);\n    this.renderer.domElement.addEventListener(\"click\", this.handleClick);\n    this.renderer.domElement.addEventListener(\n      \"mousemove\",\n      this.handleMouseMove\n    );\n  }\n\n  setupCamera() {\n    const fov = 75;\n    const { clientWidth, clientHeight } = this.container;\n    const aspect = clientWidth / clientHeight;\n    const near = 0.1;\n    const far = 10000;\n    this.camera = new THREE.PerspectiveCamera(fov, aspect, near, far);\n    this.camera.name = CAMERA_NAME;\n    this.camera.position.set(100, 100, 100);\n    this.camera.lookAt(this.scene.position);\n  }\n\n  setupLights() {\n    const dirLight = new THREE.DirectionalLight(0x4682b4, 1); // steelblue\n    dirLight.name = DIRECTIONAL_LIGHT_NAME;\n    dirLight.position.set(120, 30, -200);\n    dirLight.castShadow = true;\n    dirLight.shadow.camera.near = 10;\n    this.scene.add(dirLight);\n\n    const spotLight = new THREE.SpotLight(0xffaa55);\n    spotLight.name = SPOT_LIGHT_NAME;\n    spotLight.position.set(120, 30, 0);\n    spotLight.castShadow = true;\n    dirLight.shadow.camera.near = 10;\n    this.scene.add(spotLight);\n\n    const ambientLight = new THREE.AmbientLight(0xffaa55);\n    this.scene.add(ambientLight);\n  }\n\n  setupHelpers() {\n    const gridHelper = new THREE.GridHelper(200, 16);\n    gridHelper.name = \"Floor GridHelper\";\n    this.scene.add(gridHelper);\n\n    // XYZ axes helper (XYZ axes are RGB colors, respectively)\n    const axesHelper = new THREE.AxesHelper(75);\n    axesHelper.name = \"XYZ AzesHelper\";\n    this.scene.add(axesHelper);\n\n    const dirLight = this.scene.getObjectByName(DIRECTIONAL_LIGHT_NAME);\n\n    const dirLightHelper = new THREE.DirectionalLightHelper(dirLight, 10);\n    dirLightHelper.name = `${DIRECTIONAL_LIGHT_NAME} Helper`;\n    this.scene.add(dirLightHelper);\n\n    const dirLightCameraHelper = new THREE.CameraHelper(dirLight.shadow.camera);\n    dirLightCameraHelper.name = `${DIRECTIONAL_LIGHT_NAME} Shadow Camera Helper`;\n    this.scene.add(dirLightCameraHelper);\n\n    const spotLight = this.scene.getObjectByName(SPOT_LIGHT_NAME);\n\n    const spotLightHelper = new THREE.SpotLightHelper(spotLight);\n    spotLightHelper.name = `${SPOT_LIGHT_NAME} Helper`;\n    this.scene.add(spotLightHelper);\n\n    const spotLightCameraHelper = new THREE.CameraHelper(\n      spotLight.shadow.camera\n    );\n    spotLightCameraHelper.name = `${SPOT_LIGHT_NAME} Shadow Camera Helper`;\n    this.scene.add(spotLightCameraHelper);\n  }\n\n  setupRay() {\n    this.raycaster = new THREE.Raycaster();\n  }\n\n  /**\n   * Add a floor object to the scene.\n   * Note: Three.js's TextureLoader does not support progress events.\n   * @see https://threejs.org/docs/#api/en/loaders/TextureLoader\n   */\n  addFloor(width, height) {\n    const geometry = new THREE.PlaneGeometry(width, height, 1, 1);\n    const onLoad = texture => {\n      texture.wrapS = THREE.RepeatWrapping;\n      texture.wrapT = THREE.RepeatWrapping;\n      texture.repeat.set(4, 4);\n      const material = new THREE.MeshBasicMaterial({\n        map: texture,\n        side: THREE.DoubleSide,\n      });\n      const floor = new THREE.Mesh(geometry, material);\n      floor.name = \"Floor\";\n      floor.position.y = -0.5;\n      floor.rotation.x = Math.PI / 2;\n      this.scene.add(floor);\n\n      floor.cursor = \"pointer\";\n      floor.on(\"mouseover\", this.showTooltip);\n      floor.on(\"mouseout\", this.hideTooltip);\n    };\n\n    const onProgress = undefined;\n\n    const onError = event => {\n      alert(`Impossible to load the texture ${checkerboard}`);\n    };\n    this.textureLoader.load(checkerboard, onLoad, onProgress, onError);\n  }\n\n  setupControls() {\n    this.controls = new OrbitControls(this.camera, this.renderer.domElement);\n    this.controls.enabled = true;\n    this.controls.maxDistance = 1500;\n    this.controls.minDistance = 0;\n    this.controls.autoRotate = true;\n  }\n\n  setupGUI() {\n    const gui = new DAT.GUI();\n    gui\n      .add(this.camera.position, \"x\")\n      .name(\"Camera X\")\n      .min(0)\n      .max(100);\n    gui\n      .add(this.camera.position, \"y\")\n      .name(\"Camera Y\")\n      .min(0)\n      .max(100);\n    gui\n      .add(this.camera.position, \"z\")\n      .name(\"Camera Z\")\n      .min(0)\n      .max(100);\n  }\n\n  /**\n   * Create an object that uses custom shaders.\n   */\n  addCustomMesh() {\n    this.delta = 0;\n    const customUniforms = {\n      delta: { value: 0 },\n    };\n\n    const material = new THREE.ShaderMaterial({\n      vertexShader,\n      fragmentShader,\n      uniforms: customUniforms,\n    });\n\n    const geometry = new THREE.SphereBufferGeometry(5, 32, 32);\n\n    this.vertexDisplacement = new Float32Array(\n      geometry.attributes.position.count\n    );\n    for (let i = 0; i < this.vertexDisplacement.length; i += 1) {\n      this.vertexDisplacement[i] = Math.sin(i);\n    }\n\n    geometry.setAttribute(\n      \"vertexDisplacement\",\n      new THREE.BufferAttribute(this.vertexDisplacement, 1)\n    );\n\n    const customMesh = new THREE.Mesh(geometry, material);\n    customMesh.name = CUSTOM_MESH_NAME;\n    customMesh.position.set(5, 5, 5);\n    this.scene.add(customMesh);\n  }\n\n  updateCustomMesh() {\n    this.delta += 0.1;\n    const customMesh = this.scene.getObjectByName(CUSTOM_MESH_NAME);\n    customMesh.material.uniforms.delta.value = 0.5 + Math.sin(this.delta) * 0.5;\n    for (let i = 0; i < this.vertexDisplacement.length; i += 1) {\n      this.vertexDisplacement[i] = 0.5 + Math.sin(i + this.delta) * 0.25;\n    }\n    // attribute buffers are not refreshed automatically. To update custom\n    // attributes we need to set the needsUpdate flag to true\n    customMesh.geometry.attributes.vertexDisplacement.needsUpdate = true;\n  }\n\n  addCube(side) {\n    const geometry = new THREE.CubeGeometry(side, side, side);\n    const material = new THREE.MeshLambertMaterial({ color: 0xfbbc05 });\n    const cube = new THREE.Mesh(geometry, material);\n    cube.name = \"Cube\";\n    cube.position.set(0, side / 2, 0);\n    this.scene.add(cube);\n\n    cube.cursor = \"pointer\";\n    cube.on(\"mouseover\", this.showTooltip);\n    cube.on(\"mouseout\", this.hideTooltip);\n  }\n\n  /**\n   * Add a particle system that uses the same texture for each particle.\n   * The texture is asynchronously loaded.\n   * Note: Three.js's TextureLoader does not support progress events.\n   * @see https://threejs.org/docs/#api/en/loaders/TextureLoader\n   */\n  addParticleSystem(numParticles, particleSize, particleSpecs) {\n    const geometry = new THREE.Geometry();\n    const particles = Array(numParticles)\n      .fill(particleSpecs)\n      .map(makeParticle);\n    geometry.vertices = particles;\n\n    const onLoad = texture => {\n      const material = new THREE.PointsMaterial({\n        // alphaTest's default is 0 and the particles overlap. Any value > 0\n        // prevents the particles from overlapping.\n        alphaTest: 0.5,\n        map: texture,\n        size: particleSize,\n        transparent: true,\n      });\n\n      const particleSystem = new THREE.Points(geometry, material);\n      particleSystem.name = \"Stars\";\n      particleSystem.position.set(-50, 50, -50);\n      this.scene.add(particleSystem);\n\n      particleSystem.cursor = \"pointer\";\n      particleSystem.on(\"mouseover\", this.showTooltip);\n      particleSystem.on(\"mouseout\", this.hideTooltip);\n    };\n\n    const onProgress = undefined;\n\n    const onError = event => {\n      alert(`Impossible to load the texture ${star}`);\n    };\n\n    this.textureLoader.load(star, onLoad, onProgress, onError);\n  }\n\n  /**\n   * Add a Three.js Group object to the scene.\n   */\n  addGroupObject(numBoxes, boxSpecs) {\n    const group = new THREE.Group();\n    group.name = \"Group of Boxes\";\n    const { depth, height, spread, width } = boxSpecs;\n    const geometry = new THREE.BoxGeometry(width, height, depth);\n\n    const meshes = Array(numBoxes)\n      .fill({ geometry, spread })\n      .map(makeMesh);\n    for (const mesh of meshes) {\n      group.add(mesh);\n    }\n    group.position.set(50, 20, 50);\n    this.scene.add(group);\n\n    group.cursor = \"pointer\";\n    group.on(\"mouseover\", this.showTooltip);\n    group.on(\"mouseout\", this.hideTooltip);\n  }\n\n  /**\n   * Convert screen coordinates into Normalized Device Coordinates [-1, +1].\n   * @see https://learnopengl.com/Getting-started/Coordinate-Systems\n   */\n  getNDCCoordinates(event, debug) {\n    const {\n      clientHeight,\n      clientWidth,\n      offsetLeft,\n      offsetTop,\n    } = this.renderer.domElement;\n\n    const xRelativePx = event.clientX - offsetLeft;\n    const x = (xRelativePx / clientWidth) * 2 - 1;\n\n    const yRelativePx = event.clientY - offsetTop;\n    const y = -(yRelativePx / clientHeight) * 2 + 1;\n\n    if (debug) {\n      const data = {\n        \"Screen Coords (px)\": { x: event.screenX, y: event.screenY },\n        \"Canvas-Relative Coords (px)\": { x: xRelativePx, y: yRelativePx },\n        \"NDC (adimensional)\": { x, y },\n      };\n      console.table(data, [\"x\", \"y\"]);\n    }\n    return [x, y];\n  }\n\n  getScreenCoordinates(xNDC, yNDC) {\n    // const {\n    //   clientHeight,\n    //   clientWidth,\n    //   offsetLeft,\n    //   offsetTop,\n    // } = this.renderer.domElement;\n\n    // TODO: save this.main at instantiation\n    const main = document.querySelector(\".single-responsive-element\");\n\n    const canvasDomRect = this.canvas.getBoundingClientRect();\n    const mainDomRect = main.getBoundingClientRect();\n    // console.log(\"canvasDomRect\", canvasDomRect, \"mainDomRect\", mainDomRect);\n    const x = canvasDomRect.x - mainDomRect.x;\n    const y = canvasDomRect.y - mainDomRect.y;\n\n    // const xRelativePx = ((xNDC + 1) / 2) * clientWidth;\n    // const yRelativePx = -0.5 * (yNDC - 1) * clientHeight;\n    // const xScreen = xRelativePx + offsetLeft;\n    // const yScreen = yRelativePx + offsetTop;\n    // TODO: this is not exactly right, so the ray will not be correct\n    const xRelativePx = ((xNDC + 1) / 2) * canvasDomRect.width;\n    const yRelativePx = -0.5 * (yNDC - 1) * canvasDomRect.height;\n    const xScreen = xRelativePx + x;\n    const yScreen = yRelativePx + y;\n    return [xScreen, yScreen];\n  }\n}\n\n/**\n * Create a particle for the particle system.\n */\nfunction makeParticle(d, i) {\n  const particle = new THREE.Vector3();\n  particle.x = THREE.Math.randFloatSpread(d.spread.x);\n  particle.y = THREE.Math.randFloatSpread(d.spread.y);\n  particle.z = THREE.Math.randFloatSpread(d.spread.z);\n  return particle;\n}\n\n/**\n * Make a mesh for each Box in the GroupObject.\n */\nfunction makeMesh(d, i) {\n  const material = new THREE.MeshLambertMaterial({\n    color: Math.random() * 0xffffff,\n  });\n  const mesh = new THREE.Mesh(d.geometry, material);\n  mesh.name = `Box ${i} in GroupObject`;\n  mesh.position.x = THREE.Math.randFloatSpread(d.spread.x);\n  mesh.position.y = THREE.Math.randFloatSpread(d.spread.y);\n  mesh.position.z = THREE.Math.randFloatSpread(d.spread.z);\n  mesh.rotation.x = Math.random() * 360 * (Math.PI / 180);\n  mesh.rotation.y = Math.random() * 360 * (Math.PI / 180);\n  mesh.rotation.z = Math.random() * 360 * (Math.PI / 180);\n  return mesh;\n}\n","import { Application } from \"./application\";\nimport { toggleMobileNav } from \"./components/navbar\";\nimport \"../css/index.css\";\n\nwindow.toggleMobileNav = toggleMobileNav;\n\n(function iife() {\n  new Application();\n})();\n","/**\n * Toggle display of the navbar dropdown for small screens.\n */\nexport function toggleMobileNav() {\n  const nav = document.querySelector(\"nav\");\n  nav.classList.toggle(\"nav-grid--expanded\");\n}\n"],"sourceRoot":""}